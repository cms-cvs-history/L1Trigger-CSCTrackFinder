process TEST = {
    service = MessageLogger {
      untracked vstring destinations = { "cout", "cerr"  }
      untracked PSet cout = { untracked string threshold = "INFO"    }
      untracked PSet cerr = { untracked string threshold = "WARNING" }
      untracked vstring debugModules   = { "*" }
    }

   untracked PSet maxEvents = {untracked int32 input = 1}

	source = DaqSource{
                untracked string readerPluginName = "CSCFileReader"
		untracked PSet readerPset = {
			untracked vstring RUI01  = {'/tmp/kkotov/20558.bin_760'}
			untracked vstring FED760 = {'RUI01'}
			untracked int32 firstEvent  = 0
		}
	}

   # es_source of ideal geometry
   # ===========================
   # endcap muon only...
   include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"

   # flags for modelling of CSC geometry
   # ===================================
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

   # magnetic field (do I need it?)
   # ==============================
   #include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # csc trackfinder
   #================
   include "L1Trigger/CSCTrackFinder/data/CSCTrackFinder.cfi"
   replace l1csctracks.SectorReceiverInput = cscTrackFinderDigis:
   replace l1csctracks.useDT = false


   # Configuration via EventSetup
   include "L1TriggerConfig/CSCTFConfigProducers/data/L1CSCTFConfig.cff"

   include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

   # Output module
   module output = PoolOutputModule {
      untracked string fileName = "/tmp/kkotov/_tf.root"
   }

   include "EventFilter/CSCTFRawToDigi/data/csctfunpacker.cfi"
   path p = {cscTrackFinderDigis,csc_tf_cands}

   endpath outpath = { output }

}
