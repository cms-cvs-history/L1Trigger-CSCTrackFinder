process GeometryTestTwo = {
# empty input service; only need 1 event to check geometry!
   untracked PSet maxEvents = { untracked int32 input = 1 }
   source = EmptySource {}

   # xml for endcap csc geometry
# ===========================
   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"
   include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

# flags for modelling of CSC layer & strip geometry
# =================================================
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

   module prod =  CSCCompareLUTs { untracked int32 Station   = -1
				   untracked int32 Endcap    = -1
				   untracked int32 Sector    = -1
				   untracked int32 SubSector = -1
                                   PSet lutParam1 = { untracked bool ReadLUTs = false
						      untracked bool ReadPtLUT = false
						      #untracked string LUTPath = "L1Trigger/CSCTrackFinder/LUTs_1_0_0"
                                                      untracked bool Binary   = false # are SR LUTs binary
						      untracked bool isTMB07 = false
                                                      untracked bool isBinary = false # is Pt LUT binary
						      untracked string lutName = "CMSSW_1_7_0_LUTs"
						    }
                                   PSet lutParam2 = { untracked bool ReadLUTs = true
						      untracked bool ReadPtLUT = true
						      untracked string LUTPath = "L1Trigger/CSCTrackFinder/LUTs_1_6_0_ascii"
                                                      untracked bool Binary   = false # are SR LUTs binary
						      untracked bool isTMB07 = false
                                                      untracked bool isBinary = false # is Pt LUT binary
						      untracked string lutName = "CMSSW_1_6_0_LUTs"
						    }
				   }

service = MessageLogger {
      untracked vstring destinations = { "log.txt", "debug.txt" ,"errors.txt" }

# No constraint on log.txt content...
      untracked PSet log.txt = { untracked string threshold = "INFO"
			       	 int32 lineLength = 132
                       		 untracked bool noLineBreaks = true
                     	       }

      untracked PSet debug.txt = { untracked string threshold = "DEBUG"
                    		   int32 lineLength = 132
                    		   untracked bool noLineBreaks = true
                     		 }

      untracked PSet errors.txt = { untracked string threshold = "ERROR" }

# turn on the following to get LogDebug output
# ============================================
##      vstring debugModules = {  "*"  }

  }

# provide a scheduler path
   path p1 = { prod }
}
