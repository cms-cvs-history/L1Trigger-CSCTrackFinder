include "L1Trigger/CSCCommonTrigger/data/CSCCommonTrigger.cfi"

block CSCTrackFinderProducerNames =
{
   #names of input sources
   untracked InputTag CSCTrackProducer = l1csctracks
   untracked InputTag SectorReceiverInput = lctproducer:MPCSORTED
}

module l1csctracks = CSCTFTrackProducer {
   using CSCTrackFinderProducerNames

   bool useDT = false

   PSet SectorProcessor = {
        using CSCCommonTrigger

        uint32  CoreLatency = 8
        bool    UseBXA      = true
        uint32  BXAExtendLength = 1
        vuint32 EtaMin      = {22, 22, 14, 14, 14, 10, 10, 10}
        vuint32 EtaMax      = {127, 127, 127, 127, 127, 24, 24, 24}
        vuint32 EtaWindows  = {2, 2, 2, 2, 2, 2}

        bool run_core             = true
        bool trigger_on_ME1a      = true
        bool trigger_on_ME1b      = true
        bool trigger_on_ME2       = true
        bool trigger_on_ME3       = true
        bool trigger_on_ME4       = true
        bool trigger_on_MB1a      = true # Doesn't work yet
        bool trigger_on_MB1d      = true # Doesn't work yet
        uint32 singlesTrackPt     = 0xFF
        uint32 singlesTrackOutput = 3

        uint32 mindphip     = 70
        uint32 mindeta_accp = 4
        uint32 maxdeta_accp = 16
        uint32 maxdphi_accp = 128

   	PSet SRLUT = {
            untracked bool ReadLUTs = false
            untracked bool Binary = false
            untracked string LUTPath = "./"
        }

   	PSet PTLUT = {
            untracked bool ReadPtLUT = false
            untracked uint32 PtMethod = 1
            untracked uint32 LowQualityFlag = 4
        }
   }
}

module csctfmuonsorter = CSCTFCandidateProducer
{
   using CSCTrackFinderProducerNames
   PSet MuonSorter =
      {
	using CSCCommonTrigger
      }
}

#the two possible execution sequences
sequence csc_sp_tracks = {l1csctracks}
sequence csc_tf_cands = {l1csctracks, csctfmuonsorter}
